.01*28
.915 ^ 2
?tdist
qt(.025)
qt(.025,1)
.88^4
1-.88^4
248.3-244.8
3.5/.0066
qnorm(.02)
qnorm(.01)
qnorm(.0066)
3.5/2.47
3.5-1.41
3.5+1.41
2.65+6.48/2
(2.65+6.48)/2
248.3-244.8
(0.87+6.13)/2
(-2.76+9.76)/2
(2.65+6.48)/2
90/15
276+468+87
qf(.97,df1=2,df2=1)
pf(828,df1-2,df2=1)
pf(828,df1=2,df2=1)
1627/195528
9/15
.6*30
195528-1627
1627/2
(195528-1627)/829
813.5/233.9
qt(.025,9)
3.5/2.262157
3.5 - 3.5/2.262157
qt(.01,9)
3.5(1-1/2.821438)
3.5*(1-1/2.821438)
sqrt((3.5/2.821438)^2/5)
sqrt(0,11*0.89/100)
sqrt(0.11*0.89/100)
11+(1.96*.031)
sqrt(.2*.8/3326)
46/625
112*46/625
.05*.93+.95*.03
.05*.93/(.075)
1-0.7467
1-(1-0.7467)*(251/(251-8))
(9+12)/30
0.7*.3
29/30
29/30 * .2
500*500
500^3
install.packages("httr")
install.packages("httpuv")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(Bodyweight)
str(BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, panel = panel.loess)
qplot(Wind, Ozone, data = airquality, smooth = "loess")
qplot(Wind, Ozone, data = airquality) + geom_smooth()
qplot(Wind, Ozone, data = airquality) + stats_smooth("loess")
library(reshape2)
# load datasets
subjtest <- read.table("./UCI HAR Dataset/test/subject_test.txt")
testlabels <- read.table("./UCI HAR Dataset/test/y_test.txt")
pnorm(1,1,4)
pnorm(-2,1,2, LOWER.TAIL=FALSE)
pnorm(-2,1,2, lower.tail==FALSE)
pnorm(-2,1,2, lower.tail=FALSE)
.5*.75*.75
.75*.75
install.packages("UsingR")
library(UsingR)
library(manipulate)
myHist <- function(mu){
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
quinf(0.75)
qunif(0.75)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(temp$X*temp$Prob)
sum(1*.1+2*.2+3*.3+4*.4)
.3*.75 / (.3*.75 + .7*.45)
help pbinom
help pbinom
pbinom(9,10,0.5)
.12 * .9
.12 / .9
qnorm(.95,mean=1100,sd=75)
qnorm(.95,mean=1100,sd=7.5)
pbinom(4,5,prob=.5,lower.tail=FALSE)
pbinom(4,5,prob=.5)
pbinom(3,5,prob=.5)
pbinom(3,5,prob=.5,lower.tail=FALSE)
0.5^5
0.5^5 * 15
0.5^5 * 6
poisson.test(10,3,5,alternativ=less)
poisson.test(10,3,5,alternativ="less")
setwd("~/Coursera Videos/Reproducible Research/Course Project 1/RepData_PeerAssessment1")
read.csv("activity.csv")
activity <- read.csv("activity.csv")
str(activity)
as.Date(activity$date, format="%Y-%m-%d"")
""
as.Date(activity$date, format="%Y-%m-%d")
activity$date <- as.Date(activity$date, format="%Y-%m-%d")
str(activity)
summary(activity$steps)
summary(activity$interval)
table(activty$interval)
table(activity$interval)
table(activity$date)
with(activity,table(date,steps))
str(activity)
library(xtable)
install.packages("xtable")
library(xtable)
with(activity,sapply(c(date,steps),mean,na.rm=TRUE))
with(activity,sapply(steps,mean,na.rm=TRUE))
library(plyr)
with(activity,tapply(steps,date,mean,na.rm=TRUE))
bydate <- with(activity,tapply(steps,date,sum,na.rm=TRUE))
histogram(bydate)
hist(bydate)
str(bydate)
table(bydate)
bydate
sum(activity$steps[activity$date=='2012-11-22'])
dimnames(bydate)
data.table(bydate)
data.frame(bydate)
dim(bydate)
datesummary <- unique(activity$date)
str(datesummary)
datesummary$sum <- with(activity,tapply(steps,date,sum,na.rm=TRUE))
str(datesummary)
datesummary <- data.frame(unique(activity$date))
str(datesummary)
names(datesummary)
datesummary$sum <- bydate
str(datesummary)
names(datesummary)
names(datesummary) <- c("date","sum")
str(datesummary)
str(activity)
datesummary$sum <- with(activity, aggregate(steps, by=date, FUN=sum,na.rm=TRUE))
datesummary$sum <- with(activity, aggregate(steps, by=list(datesummary$date), FUN=sum,na.rm=TRUE))
datesummary$sum <- with(activity, aggregate(steps, by=list(date), FUN=sum,na.rm=TRUE))
str(datesummary)
datesummary <- data.frame()
str(datesummary)
datesummary <- with(activity, aggregate(steps, by=list(date), FUN=sum,na.rm=TRUE))
str(datesummary)
ddply(activity, .(date), summarise, total=sum(steps), mean=mean(steps), median=median(steps))
datesummary <- ddply(activity, .(date), summarise, total=sum(steps),
mean=mean(steps), median=median(steps))
str(datesummary)
with datesummary(plot(total ~ date))
with (datesummary, plot(total ~ date))
with (datesummary, plot(total ~ date), type=histogram)
with (datesummary, plot(total ~ date), type="h")
with (datesummary, plot(total, date, type="h")
)
with (datesummary, plot(date, total, type="h"))
with (datesummary, plot(date, total, type="h", ylab="Number of Steps"))
datesummary[,c(date,mean,media)]
datesummary[,c(date,mean,median)]
str(datesummary)
datesummary[,c('date','mean','median')]
str(activity)
timesummary <- ddply(activity, .(interval), summarise, total=sum(steps),
mean=mean(steps), median=median(steps))
str(timesummary)
with (timesummary, plot(interval, mean, type="h", ylab="Number of Steps"))
timesummary <- ddply(activity, .(interval), summarise, total=sum(steps,na.rm=TRUE),
mean=mean(steps,na.rm=TRUE), median=median(steps,na.rm=TRUE))
with (timesummary, plot(interval, mean, type="h", ylab="Number of Steps"))
with (timesummary, plot(interval, mean, type="l", ylab="Number of Steps"))
which.max(timesummary$mean)
maxindex <- which.max(timesummary$mean)
timesummary$mean[maxindex]
timesummary$interval[maxindex]
which(is.na(activity$step))
missing <- which(is.na(activity$step))
activity$step[missing] <- timesummary$mean[interval==activity$interval]
activity$step[missing] <- timesummary$mean[timesummary$interval==activity$interval]
activity <- read.csv("activity.csv")
str(activity)
activity$date <- as.Date(activity$date, format="%Y-%m-%d")
summary(activity$steps)
missing <- which(is.na(activity$step))
dim(missing)
str(missing)
length(missing)
ddply(activity[missing,], .(interval), <- timesummary$mean[.(interval)])
ddply(activity[missing,], .(interval), timesummary$mean[.(interval)])
ddply(activity[missing,], .(interval), timesummary$mean[.interval])
merge(activity, timesummary, by="interval", all=TRUE)
activity2 <- merge(activity, timesummary[,c("interval","mean")], by="interval", all=TRUE)
str(activity2)
summary(activity2)
activity$step[missing] <- activity$mean
activity$step[missing] <- activity$mean[missing]
activity$steps[missing] <- activity$mean
activity$steps[missing]
activity$mean[missing]
activity2$mean
activity2$mean[missing]
is.na(activity2$steps) <- activity2$mean
summary(activity2)
summary(activity$steps)
activity2 <- merge(activity, timesummary[,c("interval","mean")], by="interval", all=TRUE)
str(activity2)
summary(activity2)
activity2$mean[missing] <- activity2$mean
summary(activity2)
activity2$mean[missing] <- activity2$mean[missing]
summary(activity2)
activity2$steps[missing] <- activity2$mean[missing]
summary(activity2)
str(activity2)
length(missing)
summary(activity2)
activity2$steps[missing] <- activity2$mean[missing]
summary(activity2)
missing <- which(is.na(activity$steps))
str(missing)
length(missing)
activity2 <- merge(activity, timesummary[,c("interval","mean")], by="interval", all=TRUE)
str(activity2)
summary(activity2)
summary(activity2$steps)
activity2$steps[missing] <- activity2$mean[missing]
summary(activity2$steps)
activity2$steps[missing] = activity2$mean[missing]
summary(activity2$steps)
for (idx in missing) activity2$steps[idx] = activity2$mean[idx]
summary(activity2$steps)
summary(activity2$mean)
summary(activity2$mean[missing])
summary(activity2$steps[missing])
which(is.na(activity$steps))
missing2 <- which(is.na(activity$steps))
length(missing2)
missing2 <- which(is.na(activity2$steps))
length(missing2)
summary(activity2$steps[missing2])
summary(activity2$mean[missing2])
activity2 <- merge(activity, timesummary[,c("interval","mean")], by="interval", all=TRUE)
str(activity2)
summary(activity2)
missing <- which(is.na(activity2$steps))
summary(activity2$steps)
summary(activity2$mean[missing])
summary(activity2$steps[missing])
activity2$steps[missing] = activity2$mean[missing]
summary(activity2$steps[missing])
summary(activity2$steps)
weekdays(activity2$date)
weekdays <- data.frame(day=c("Monday","Tuesday","Wednesday","Thursday",
"Friday","Saturday","Sunday"),
dayindicator=c("weekday","weekday","weekday","weekday",
"weekday","weekend","weekend"))
weekday <- data.frame(day=c("Monday","Tuesday","Wednesday","Thursday",
"Friday","Saturday","Sunday"),
dayindicator=c("weekday","weekday","weekday","weekday",
"weekday","weekend","weekend"))
weekday[day==weekdays(activity2$date),dayindicator]
weekday[day==weekdays(activity2$date),weekday$dayindicator]
weekday[weekday$day==weekdays(activity2$date),weekday$dayindicator]
weekday
merge(activity2,weekday,by=intersect(weekdays(activity2$date),weekday$day),all=TRUE)
activity2$day <- weekdays(activity2$date)
merge(activity2,weekday,by=day,all=TRUE)
merge(activity2,weekday,by="day",all=TRUE)
activity3 <- merge(activity2,weekday,by="day",all=TRUE)
str(activity3)
activity3 <- merge(activity2[,c("day","interval","steps")],weekday,by="day",all=TRUE)
str(activity3)
summary(activity3)
daysummary <- ddply(activity3, .(interval, dayindicator), summarise,
mean=mean(steps))
summary(daysummary)
with (daysummary, plot(interval[dayindicator=="weekday"], mean, type="l",
ylab="Number of Steps"))
with (daysummary[dayindicator=="weekday",], plot(interval, mean, type="l",
ylab="Number of Steps"))
with (daysummary[daysummary$dayindicator=="weekday",], plot(interval, mean, type="l",
ylab="Number of Steps"))
with (daysummary[daysummary$dayindicator=="weekend",], plot(interval, mean, type="l",
ylab="Number of Steps"))
with (daysummary[daysummary$dayindicator=="weekend",], plot(interval, mean, type="l",
ylab="Number of Steps"),title="weekend")
par(mfrow=c(1,2))
with (daysummary[daysummary$dayindicator=="weekday",], plot(interval, mean, type="l",
ylab="Number of Steps"),title="Weekday")
with (daysummary[daysummary$dayindicator=="weekend",], plot(interval, mean, type="l",
ylab="Number of Steps"),title="weekend")
par(mfrow=c(2,1))
with (daysummary[daysummary$dayindicator=="weekday",], plot(interval, mean, type="l",
ylab="Number of Steps"),main="Weekday")
with (daysummary[daysummary$dayindicator=="weekend",], plot(interval, mean, type="l",
ylab="Number of Steps"),main="weekend")
str(activity3)
par(mfrow=c(2,1))
with (daysummary[daysummary$dayindicator=="weekday",], plot(interval, mean, type="l",
ylab="Number of Steps",title="Weekday"))
with (daysummary[daysummary$dayindicator=="weekend",], plot(interval, mean, type="l",
ylab="Number of Steps",main="weekend"))
par(mfrow=c(2,1))
with (daysummary[daysummary$dayindicator=="weekday",], plot(interval, mean, type="l",
ylab="Number of Steps",main="Weekday"))
with (daysummary[daysummary$dayindicator=="weekend",], plot(interval, mean, type="l",
ylab="Number of Steps",main="weekend"))
